version: v1
name: wf-quality-customers
type: workflow
tags:
  - demo.customer
description: The job performs metrics calculations and checks on customers data
workflow:
  title: Metrics and checks
  dag:
    - name: quality-customers
      title: Metrics and checks
      description: The job performs metrics calculations and checks on customers data
      spec:
        stack: flare:3.0
        compute: runnable-default
        tags:
          - Metrics
        title: Metrics and checks
        description: The job performs metrics calculations and checks on customers data
        flare:
          job:
            explain: true
            logLevel: INFO
            inputs:
              - name: source
                dataset:  dataos://icebasedev:retail_accelerator/customers
                format: iceberg

            assertions:
              - column: customer_id
                tests:
                  - duplicate_count == 0
                  - missing_percentage == 0
                  - missing_count <= 0

              - column: first_name
                validFormat:
                  regex: /[a-zA-Z]+/g
                tests:
                  - missing_count == 0
                  - invalid_count > 10

              - column: last_name
                validFormat:
                  regex: /[a-zA-Z]+/g
                tests:
                  - missing_count == 0
                  - invalid_count < 10

              - column: gender
                tests:
                  - duplicate_count == 0
                  - missing_percentage == 0
                  - missing_count <= 0

              - column: phone_number
                validFormat:
                  regex: \([1-9][0-9]{2}\)[ ][1-9]{3}[-][0-9]{4}
                tests:
                  - duplicate_count == 0
                  - missing_percentage == 0
                  - missing_count <= 0

              - column: email_id
                validFormat:
                  regex: /^([\w\.%\+\-]+)@([\w\-]+\.)+([\w]{2,})$/i
                tests: 
                  - duplicate_count == 0
                  - missing_percentage == 0
                  - missing_count <= 0

              - column: birth_date
                validFormat:
                  regex: ^\d{4}\-(0[1-9]|1[012])\-(0[1-9]|[12][0-9]|3[01])$
                tests:
                  - missing_percentage == 0
                  - missing_count <= 0

              - column: age
                validFormat:
                  regex: /\d/g
                tests:
                  - missing_percentage == 0
                  - missing_count <= 0

              - column: education_level
                validFormat:
                  regex: /[a-zA-Z]+/g
                tests:
                  - missing_percentage == 0
                  - missing_count <= 0

              - column: marital_status
                validFormat:
                  regex: /[a-zA-Z]+/g
                tests:
                  - missing_percentage == 0
                  - missing_count <= 0
                  
              - column: number_of_children
                validFormat: 
                  regex: /\d/g
                tests: 
                  - missing_percentage == 0
                  - missing_count <= 0

              - column: register_date
                validFormat:
                  regex: ^\d{4}\-(0[1-9]|1[012])\-(0[1-9]|[12][0-9]|3[01])$
                tests: 
                  - missing_percentage == 0
                  - missing_count <= 0

              - column: occupation
                validFormat:
                  regex: /[a-zA-Z]+/g
                tests:
                  - missing_percentage == 0
                  - missing_count <= 0

              - column: annual_income
                validFormat:
                  regex: ^[a-zA-Z0-9_.-]*$
                tests:
                  - missing_percentage == 0
                  - missing_count <= 0


              - column: hobbies
                validFormat:
                  regex: /[a-zA-Z]+/g
                tests: 
                  - missing_percentage == 0
                  - missing_count <= 0

              - column: degree_of_loyalty
                validFormat:
                  regex: /[a-zA-Z]+/g
                tests: 
                  - missing_percentage == 0
                  - missing_count <= 0

              - column: social_class
                validFormat:
                  regex: /[a-zA-Z]+/g
                tests: 
                  - missing_percentage == 0
                  - missing_count <= 0

              - column: mailing_street
                validFormat:
                  regex: ^[a-zA-Z0-9_.-]*$
                tests: 
                  - missing_percentage == 0
                  - missing_count <= 0

              - column: city
                validFormat:
                  regex: /[a-zA-Z]+/g
                tests: 
                  - missing_percentage == 0
                  - missing_count <= 0

              - column: state
                validFormat:
                  regex: /[a-zA-Z]+/g
                tests: 
                  - missing_percentage == 0
                  - missing_count <= 0

              - column: country
                validFormat:
                  regex: /[a-zA-Z]+/g
                tests: 
                  - missing_percentage == 0
                  - missing_count <= 0

              - column: zip_code
                validFormat:
                  regex: ^[a-zA-Z0-9_.-]*$
                tests:
                  - missing_percentage == 0
                  - missing_count <= 0





                  